name: deploy-batch-endpoint-pipeline

on: 
  workflow_dispatch:
    inputs:
      resource_group:
        description: 'Resource group name'
        required: true
        default: 'rg-ydamlv12-yd202304dev'
      aml_workspace:
        description: 'AML workspace name'
        required: true
        default: 'mlw-ydamlv12-yd202304dev'
      cluster_name:
        description: 'AML Batch Compute cluster name'
        required: true
        default: 'batch-cluster'    
      endpoint_file:
        description: 'Endpoint file'
        required: true
        default: 'mlops/azureml/deploy/batch/batch-deployment.yml'
      endpoint_name:
        description: 'Endpoint name'
        required: true
        default: 'taxi-gha-batch'
      endpoint_type:
        description: 'Endpoint type'
        required: true
        default: 'batch'
jobs:

  create-compute:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create Compute
        uses: ./.github/actions/create-compute
        with:
          resource_group: ${{ inputs.resource_group }}
          workspace_name: ${{ inputs.aml_workspace }} 
          compute_name: ${{ inputs.cluster_name }} 
          cluster_size: 5
          node_sku: Standard_DS3_v2
          creds: ${{ secrets.AZURE_CREDENTIALS }}     
  create-endpoint:
    runs-on: ubuntu-latest
    needs: create-compute
    steps:
      - name: Execute create-endpoint composite action
        uses: ./.github/actions/create-endpoint
        with:
          endpoint_file: ${{ inputs.endpoint_file }}
          resource_group: ${{ inputs.resource_group }}
          workspace_name: ${{ inputs.aml_workspace }}
          endpoint_name: ${{ inputs.endpoint_name }}
          endpoint_type: ${{ inputs.endpoint_type }}
          creds: ${{ secrets.creds }}

  create-deployment:
    runs-on: ubuntu-latest
    needs: create-endpoint
    steps:
      - name: Execute create-deployment composite action
        uses: ./.github/actions/create-deployment
        with:
          endpoint_file: ${{ inputs.endpoint_file }}
          resource_group: ${{ inputs.resource_group }}
          workspace_name: ${{ inputs.aml_workspace }}
          endpoint_name: ${{ inputs.endpoint_name }}
          endpoint_type: ${{ inputs.endpoint_type }}          
          creds: ${{ secrets.creds }}
